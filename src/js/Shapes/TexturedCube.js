import {TexturedShape} from "./TexturedShape";

export class TexturedCube extends TexturedShape {
    constructor(texture) {
        super(texture);
        this.vertices = new Float32Array([
            -0.5, -0.5,  -0.5,
            -0.5,  0.5,  -0.5,
            0.5, -0.5,  -0.5,
            -0.5,  0.5,  -0.5,
            0.5,  0.5,  -0.5,
            0.5, -0.5,  -0.5,

            -0.5, -0.5,   0.5,
            0.5, -0.5,   0.5,
            -0.5,  0.5,   0.5,
            -0.5,  0.5,   0.5,
            0.5, -0.5,   0.5,
            0.5,  0.5,   0.5,

            -0.5,   0.5, -0.5,
            -0.5,   0.5,  0.5,
            0.5,   0.5, -0.5,
            -0.5,   0.5,  0.5,
            0.5,   0.5,  0.5,
            0.5,   0.5, -0.5,

            -0.5,  -0.5, -0.5,
            0.5,  -0.5, -0.5,
            -0.5,  -0.5,  0.5,
            -0.5,  -0.5,  0.5,
            0.5,  -0.5, -0.5,
            0.5,  -0.5,  0.5,

            -0.5,  -0.5, -0.5,
            -0.5,  -0.5,  0.5,
            -0.5,   0.5, -0.5,
            -0.5,  -0.5,  0.5,
            -0.5,   0.5,  0.5,
            -0.5,   0.5, -0.5,

            0.5,  -0.5, -0.5,
            0.5,   0.5, -0.5,
            0.5,  -0.5,  0.5,
            0.5,  -0.5,  0.5,
            0.5,   0.5, -0.5,
            0.5,   0.5,  0.5,
        ]);
        this.textureMap = new Float32Array(
            [
                0, 0,
                0, 1,
                1, 0,
                0, 1,
                1, 1,
                1, 0,

                0, 0,
                0, 1,
                1, 0,
                1, 0,
                0, 1,
                1, 1,

                0, 0,
                0, 1,
                1, 0,
                0, 1,
                1, 1,
                1, 0,

                0, 0,
                0, 1,
                1, 0,
                1, 0,
                0, 1,
                1, 1,

                0, 0,
                0, 1,
                1, 0,
                0, 1,
                1, 1,
                1, 0,

                0, 0,
                0, 1,
                1, 0,
                1, 0,
                0, 1,
                1, 1,
            ]);
    }

}